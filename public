<!DOCTYPE html>
<html lang="zh-CN">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>团队空间 - 登录</title>
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css" rel="stylesheet">
  <style>
    body { background: linear-gradient(135deg,#e6f0ff,#f6f0ff); min-height:100vh; }
    .glass { background:rgba(255,255,255,0.92); backdrop-filter:blur(8px); box-shadow:0 10px 30px rgba(0,0,0,0.1); border-radius:12px; padding:20px; }
    .hidden { display:none; }
    .content-card { transition:all .25s ease; }
    .content-card:hover { transform:translateY(-6px); box-shadow:0 10px 25px rgba(0,0,0,0.1); }
    .like-anim { animation: heartbeat .4s ease; }
    @keyframes heartbeat {
      0% {transform:scale(1);} 30%{transform:scale(1.25);} 60%{transform:scale(.9);} 100%{transform:scale(1);}
    }
    #syncIndicator { position:fixed; left:16px; bottom:16px; padding:6px 12px; border-radius:8px; background:#fff; box-shadow:0 4px 12px rgba(0,0,0,0.1);}
  </style>
</head>
<body class="flex items-center justify-center p-6">

  <!-- 登录界面 -->
  <div id="loginPage" class="glass w-full max-w-sm">
    <h2 class="text-xl font-bold mb-4 text-center">登录团队空间</h2>
    <div class="mb-3">
      <label class="block text-sm mb-1">名字</label>
      <input id="usernameInput" type="text" class="w-full border rounded p-2" placeholder="请输入名字">
    </div>
    <div id="adminPassDiv" class="mb-3 hidden">
      <label class="block text-sm mb-1">管理员密码</label>
      <input id="adminPassInput" type="password" class="w-full border rounded p-2" placeholder="请输入密码">
    </div>
    <button id="loginBtn" class="w-full bg-blue-600 hover:bg-blue-700 text-white rounded p-2">进入空间</button>
  </div>

  <!-- 主界面 -->
  <div id="mainPage" class="hidden w-full">
    <header class="flex justify-between items-center p-4 bg-white shadow">
      <h1 class="text-xl font-bold">团队新闻空间</h1>
      <div class="flex items-center space-x-3">
        <span id="currentUser" class="font-medium"></span>
        <button id="logoutBtn" class="px-3 py-1 bg-gray-200 rounded hover:bg-gray-300">退出</button>
      </div>
    </header>
    <main class="p-4 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4" id="contentArea">
      <!-- 内容卡片会动态加载 -->
    </main>
  </div>
<!-- 上传与功能区 -->
  <div id="actionBar" class="hidden p-4 bg-white shadow flex flex-wrap gap-3 items-center">
    <button id="addNewsBtn" class="bg-green-600 text-white px-3 py-1 rounded hover:bg-green-700">
      <i class="bi bi-plus-lg"></i> 发布新闻
    </button>
    <label class="bg-blue-600 text-white px-3 py-1 rounded hover:bg-blue-700 cursor-pointer">
      <i class="bi bi-image"></i> 上传图片/视频
      <input type="file" id="fileInput" class="hidden" multiple>
    </label>
    <button id="wishBtn" class="bg-purple-600 text-white px-3 py-1 rounded hover:bg-purple-700">
      <i class="bi bi-stars"></i> 许愿池
    </button>
    <div id="adminPanelBtn" class="hidden">
      <button class="bg-red-600 text-white px-3 py-1 rounded hover:bg-red-700">
        <i class="bi bi-shield-lock"></i> 管理后台
      </button>
    </div>
    <div id="onlineUsers" class="ml-auto text-sm text-gray-600">
      在线人数: <span id="onlineCount">0</span>
    </div>
  </div>

  <!-- 上传进度条 -->
  <div id="uploadProgress" class="hidden w-full bg-gray-200 h-2 rounded mt-2">
    <div id="uploadBar" class="bg-blue-600 h-2 rounded" style="width:0%"></div>
  </div>

  <!-- 同步状态指示器 -->
  <div id="syncIndicator">🟢 云端同步正常</div>

  <!-- 管理后台弹窗 -->
  <div id="adminPanel" class="hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center">
    <div class="bg-white rounded p-6 w-full max-w-lg">
      <h2 class="text-lg font-bold mb-4">管理员后台</h2>
      <button id="forceSyncBtn" class="bg-blue-600 text-white px-3 py-1 rounded mr-2">手动同步</button>
      <button id="reloadBtn" class="bg-gray-600 text-white px-3 py-1 rounded mr-2">重新加载</button>
      <h3 class="font-semibold mt-4 mb-2">在线用户管理</h3>
      <ul id="userList" class="list-disc pl-6 text-sm"></ul>
      <div class="text-right mt-4">
        <button id="closeAdminPanel" class="px-3 py-1 bg-gray-200 rounded hover:bg-gray-300">关闭</button>
      </div>
    </div>
  </div>
<!-- 查看大图/视频弹窗 -->
  <div id="viewerModal" class="hidden fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center">
    <div class="relative max-w-3xl max-h-full">
      <button id="closeViewer" class="absolute -top-10 right-0 text-white text-2xl">&times;</button>
      <img id="viewerImg" class="hidden max-h-[80vh] rounded" />
      <video id="viewerVideo" class="hidden max-h-[80vh] rounded" controls></video>
    </div>
  </div>

  <!-- 模板（动态生成内容时用） -->
  <template id="newsCardTpl">
    <div class="content-card glass p-4">
      <h3 class="font-bold mb-2"></h3>
      <p class="text-sm mb-2"></p>
      <div class="flex items-center justify-between text-sm text-gray-600">
        <span class="author"></span>
        <button class="likeBtn flex items-center space-x-1 text-gray-600 hover:text-red-600">
          <i class="bi bi-heart"></i><span class="likeCount">0</span>
        </button>
      </div>
      <div class="comments mt-2 space-y-1"></div>
      <input type="text" class="commentInput w-full border rounded p-1 text-sm" placeholder="写评论... (回车发送)">
    </div>
  </template>

  <template id="mediaCardTpl">
    <div class="content-card glass p-4">
      <div class="mediaPreview mb-2 cursor-pointer"></div>
      <div class="flex items-center justify-between text-sm text-gray-600">
        <span class="author"></span>
        <button class="likeBtn flex items-center space-x-1 text-gray-600 hover:text-red-600">
          <i class="bi bi-heart"></i><span class="likeCount">0</span>
        </button>
      </div>
      <div class="comments mt-2 space-y-1"></div>
      <input type="text" class="commentInput w-full border rounded p-1 text-sm" placeholder="写评论... (回车发送)">
    </div>
  </template>

  <template id="wishCardTpl">
    <div class="content-card glass p-4 border-l-4 border-purple-500">
      <p class="italic mb-2"></p>
      <div class="text-sm text-gray-600 author"></div>
    </div>
  </template>
<script>
const loginPage = document.getElementById("loginPage");
const mainPage = document.getElementById("mainPage");
const usernameInput = document.getElementById("usernameInput");
const adminPassDiv = document.getElementById("adminPassDiv");
const adminPassInput = document.getElementById("adminPassInput");
const loginBtn = document.getElementById("loginBtn");
const currentUserSpan = document.getElementById("currentUser");
const logoutBtn = document.getElementById("logoutBtn");
const contentArea = document.getElementById("contentArea");
const addNewsBtn = document.getElementById("addNewsBtn");
const fileInput = document.getElementById("fileInput");
const wishBtn = document.getElementById("wishBtn");
const uploadProgress = document.getElementById("uploadProgress");
const uploadBar = document.getElementById("uploadBar");
const syncIndicator = document.getElementById("syncIndicator");
const adminPanelBtn = document.getElementById("adminPanelBtn");
const adminPanel = document.getElementById("adminPanel");
const forceSyncBtn = document.getElementById("forceSyncBtn");
const reloadBtn = document.getElementById("reloadBtn");
const userList = document.getElementById("userList");
const closeAdminPanel = document.getElementById("closeAdminPanel");
const onlineCount = document.getElementById("onlineCount");
const viewerModal = document.getElementById("viewerModal");
const viewerImg = document.getElementById("viewerImg");
const viewerVideo = document.getElementById("viewerVideo");
const closeViewer = document.getElementById("closeViewer");

let currentUser = null;
let isAdmin = false;
let syncTimer = null;

usernameInput.addEventListener("input", () => {
  if (usernameInput.value.trim() === "admin") {
    adminPassDiv.classList.remove("hidden");
  } else {
    adminPassDiv.classList.add("hidden");
  }
});

loginBtn.addEventListener("click", () => {
  const name = usernameInput.value.trim();
  if (!name) return alert("请输入名字");
  if (name === "admin") {
    if (adminPassInput.value !== "123456") return alert("管理员密码错误");
    isAdmin = true;
  }
  currentUser = name;
  localStorage.setItem("username", name);
  startApp();
});

logoutBtn.addEventListener("click", () => {
  localStorage.removeItem("username");
  location.reload();
});

function startApp() {
  loginPage.classList.add("hidden");
  mainPage.classList.remove("hidden");
  document.getElementById("actionBar").classList.remove("hidden");
  currentUserSpan.textContent = currentUser;
  if (isAdmin) adminPanelBtn.classList.remove("hidden");
  loadContent();
  syncTimer = setInterval(checkUpdates, 3000);
}

async function loadContent() {
  contentArea.innerHTML = "";
  const res = await fetch("/api/state");
  const data = await res.json();
  data.news.forEach(renderNews);
  data.media.forEach(renderMedia);
  data.wishes.forEach(renderWish);
  onlineCount.textContent = data.online.length;
}
function renderNews(item) {
  const tpl = document.getElementById("newsCardTpl").content.cloneNode(true);
  tpl.querySelector("h3").textContent = item.title;
  tpl.querySelector("p").textContent = item.content;
  tpl.querySelector(".author").textContent = item.author;
  tpl.querySelector(".likeCount").textContent = item.likes || 0;
  tpl.querySelector(".likeBtn").addEventListener("click", () => sendLike("news", item.id));
  const commentInput = tpl.querySelector(".commentInput");
  commentInput.addEventListener("keypress", e => {
    if (e.key === "Enter") {
      sendComment("news", item.id, commentInput.value);
      commentInput.value = "";
    }
  });
  contentArea.appendChild(tpl);
}

function renderMedia(item) {
  const tpl = document.getElementById("mediaCardTpl").content.cloneNode(true);
  let preview = tpl.querySelector(".mediaPreview");
  if (item.type.startsWith("image")) {
    let img = document.createElement("img");
    img.src = item.url; img.className="w-full rounded cursor-pointer";
    img.onclick=()=>showViewer("img",item.url);
    preview.appendChild(img);
  } else if (item.type.startsWith("video")) {
    let vid = document.createElement("video");
    vid.src=item.url; vid.className="w-full rounded cursor-pointer"; vid.controls=true;
    vid.onclick=()=>showViewer("video",item.url);
    preview.appendChild(vid);
  }
  tpl.querySelector(".author").textContent = item.author;
  tpl.querySelector(".likeCount").textContent = item.likes || 0;
  tpl.querySelector(".likeBtn").addEventListener("click", () => sendLike("media", item.id));
  const commentInput = tpl.querySelector(".commentInput");
  commentInput.addEventListener("keypress", e => {
    if (e.key === "Enter") {
      sendComment("media", item.id, commentInput.value);
      commentInput.value="";
    }
  });
  contentArea.appendChild(tpl);
}

function renderWish(item) {
  const tpl = document.getElementById("wishCardTpl").content.cloneNode(true);
  tpl.querySelector("p").textContent = item.text;
  tpl.querySelector(".author").textContent = item.anonymous ? "匿名" : item.author;
  contentArea.appendChild(tpl);
}

function showViewer(type,url){
  viewerModal.classList.remove("hidden");
  if(type==="img"){viewerImg.src=url;viewerImg.classList.remove("hidden");}
  if(type==="video"){viewerVideo.src=url;viewerVideo.classList.remove("hidden");}
}
closeViewer.onclick=()=>{
  viewerModal.classList.add("hidden");
  viewerImg.classList.add("hidden");
  viewerVideo.classList.add("hidden");
};

async function sendLike(kind,id){await fetch("/api/like",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({kind,id,user:currentUser})});loadContent();}
async function sendComment(kind,id,text){if(!text)return;await fetch("/api/comment",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({kind,id,text,user:currentUser})});loadContent();}
async function checkUpdates(){try{const res=await fetch("/api/state");const data=await res.json();contentArea.innerHTML="";data.news.forEach(renderNews);data.media.forEach(renderMedia);data.wishes.forEach(renderWish);onlineCount.textContent=data.online.length;syncIndicator.textContent="🟢 云端同步正常";}catch(e){syncIndicator.textContent="🔴 同步失败";}}

</script>
</body>
</html>
